#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The 'McgInterop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace McgInterop
{
	internal unsafe static partial class ForwardComSharedStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__Type__object__string__object__<TThis>(
					global::System.__ComObject __this, 
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Type__Impl.UnsafeType unsafe_targetType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.HSTRING unsafe_language = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
				int unsafe_targetType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									targetType, 
									out unsafe_targetType__HSTRING__Name, 
									out unsafe_targetType__int__Kind
								);
				unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
				unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				fixed (char* pBuffer_language = language)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_language;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_language, language, &(hstring_header_language), &(unsafe_language));
					unsafe_returnValue__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_value, 
										unsafe_targetType, 
										unsafe_parameter, 
										unsafe_language, 
										&(unsafe_returnValue__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				}
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_IntPtr__out_IntPtr__IntPtr__<TThis>(
					global::System.__ComObject __this, 
					global::System.IntPtr outer, 
					out global::System.IntPtr inner, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_inner;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								outer, 
								&(unsafe_inner), 
								&(unsafe_instance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			instance__retval = unsafe_instance__retval;
			inner = unsafe_inner;
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_TResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 p, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									p, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(p);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.put_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int<TThis>(
					global::System.__ComObject __this, 
					int value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IApplication.remove_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Resuming, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_object___Windows_Foundation__EventHandler_A_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_object__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::System.EventHandler<object> value, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_System_Object_V___Impl.Vtbl** unsafe_value = default(global::System.EventHandler_A_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.EventHandler_A_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::System.EventHandler<object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::System.EventHandler_A_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.Exit, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.KeyValuePair<System.Object,System.Object>.get_Key, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe___value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object __value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe___value__retval));
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_HasCurrent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_bool__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			// Return
			return __value__retval;
		}

		// Signature, Windows.UI.Xaml.UnhandledExceptionEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__TArg0__<TThis, TArg0>(
					global::System.__ComObject __this, 
					object sender, 
					TArg0 e, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Opacity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static double Func_double__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			double unsafe_value__retval;
			double value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_Opacity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double__<TThis>(
					global::System.__ComObject __this, 
					double value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_KeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_KeyEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyEventHandler value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_GotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_RoutedEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventHandler value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget25>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DragEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventHandler value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget26>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_PointerPressed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_PointerEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerEventHandler value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget27>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.TransformToVisual, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_TArg0__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					TArg0 visual, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									visual, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(visual);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Input.IPointerPoint.get_Position, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func__Point__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe_value__retval;
			global::Windows.Foundation.Point value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_intobject__<TThis>(
					global::System.__ComObject __this, 
					int patternInterface, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									patternInterface, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_int__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			int unsafe_returnValue__retval;
			int returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__TArg1__<TThis, TArg0, TArg1>(
					global::System.__ComObject __this, 
					TArg0 sender, 
					TArg1 args, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TArg1__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TArg1__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(TArg1).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_TArg1__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg1__arg)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Thickness Func_UI_Xaml_Thickness__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Thickness unsafe_value__retval;
			global::Windows.UI.Xaml.Thickness value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Thickness__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Thickness value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Name, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__<TThis>(
					global::System.__ComObject __this, 
					string value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_value = value)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size___Size__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Size availableSize, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_returnValue__retval;
			global::Windows.Foundation.Size returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								availableSize, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__object__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 sender, 
					object args, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(TArg0).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentPresenter.put_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__<TThis>(
					global::System.__ComObject __this, 
					object value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_object__TArg0__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					object item, 
					TArg0 container, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									container, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_item, 
									unsafe_TArg0__arg, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_string__TResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					string childName, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_childName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_childName = childName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_childName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_childName, childName, &(hstring_header_childName), &(unsafe_childName));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_childName, 
										&(unsafe_TResult__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.add_ImageFailed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ExceptionRoutedEventHandler__Windows_UI_Xaml__ExceptionRoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_ExceptionRoutedEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ExceptionRoutedEventHandler value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ExceptionRoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget80>(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IMediaPlayerElement.put_AreTransportControlsEnabled, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_bool__<TThis>(
					global::System.__ComObject __this, 
					bool value, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_value;
			int unsafe___return__;
			// Marshalling
			unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IPivot.add_SelectionChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_SelectionChangedEventHandler__Windows_UI_Xaml_Controls__SelectionChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_SelectionChangedEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget84>(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPivot.add_PivotItemLoading, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Pivot__Windows_UI_Xaml_Controls_PivotItemEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Pivot_j_Windows_UI_Xaml_Controls_PivotItemEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Pivot__UI_Xaml_Controls_PivotItemEventArgs__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Pivot, global::Windows.UI.Xaml.Controls.PivotItemEventArgs> value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Pivot_j_Windows_UI_Xaml_Controls_PivotItemEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Pivot_j_Windows_UI_Xaml_Controls_PivotItemEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Pivot_j_Windows_UI_Xaml_Controls_PivotItemEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Pivot, global::Windows.UI.Xaml.Controls.PivotItemEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget85>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Pivot_j_Windows_UI_Xaml_Controls_PivotItemEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IBorder.get_CornerRadius, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_CornerRadius__Windows_UI_Xaml__CornerRadius, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.CornerRadius Func_UI_Xaml_CornerRadius__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.CornerRadius unsafe_value__retval;
			global::Windows.UI.Xaml.CornerRadius value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__<TThis>(
					global::System.__ComObject __this, 
					object oldContent, 
					object newContent, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_oldContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_newContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(oldContent);
				unsafe_newContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(newContent);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_oldContent, 
									unsafe_newContent
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContent)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContent)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IToggleButton.get_IsChecked, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_bool___Windows_Foundation__IReference_A_bool_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<bool> Func_Nullable_1_bool___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_bool_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Nullable_A_bool_V___Impl.Vtbl**);
			global::System.Nullable<bool> value__retval = default(global::System.Nullable<bool>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = (bool)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value__retval), 
															typeof(global::Windows.Foundation.IReference<bool>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Boolean>"
									);
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IToggleButton.put_IsChecked, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_bool___Windows_Foundation__IReference_A_bool_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_bool___<TThis>(
					global::System.__ComObject __this, 
					global::System.Nullable<bool> value, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_bool_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_bool_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<bool> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<bool>(value.Value, 11);
					unsafe_value = (global::System.Nullable_A_bool_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<bool>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_UnderlyingType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Type Func_Type__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Type value__retval;
			global::System.Type__Impl.UnsafeType unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
								unsafe_value__retval.Name, 
								((int)unsafe_value__retval.Kind)
							);
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IDictionary<Org.WebRtc.RTCStatsValueName,System.Object>.get_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Org.WebRtc.__IRTCIceCandidatePublicNonVirtuals.get_SdpMLineIndex, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] ushort__unsigned short, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static ushort Func_ushort__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			ushort unsafe___returnValue__retval;
			ushort __returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe___returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__returnValue__retval = unsafe___returnValue__retval;
			// Return
			return __returnValue__retval;
		}

		// Signature, Org.WebRtc.__IRTCPeerConnectionIceStateChangeEventPublicNonVirtuals.get_State, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Org_WebRtc_RTCIceConnectionState__Org_WebRtc__RTCIceConnectionState, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Org.WebRtc.RTCIceConnectionState Func_Org_WebRtc_RTCIceConnectionState__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Org.WebRtc.RTCIceConnectionState unsafe___returnValue__retval;
			global::Org.WebRtc.RTCIceConnectionState __returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe___returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__returnValue__retval = unsafe___returnValue__retval;
			// Return
			return __returnValue__retval;
		}

		// Signature, Org.WebRtc.__IRTCPeerConnectionHealthStatsPublicNonVirtuals.get_ReceivedBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static long Func_long__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			long unsafe___returnValue__retval;
			long __returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe___returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__returnValue__retval = unsafe___returnValue__retval;
			// Return
			return __returnValue__retval;
		}

		// Signature, Org.WebRtc.__IRTCPeerConnectionHealthStatsPublicNonVirtuals.set_ReceivedBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_long__<TThis>(
					global::System.__ComObject __this, 
					long __set_formal, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								__set_formal
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Org.WebRtc.__IRTCDataChannelInitPublicNonVirtuals.get_MaxPacketLifeTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_ushort___Windows_Foundation__IReference_A_ushort_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<ushort> Func_Nullable_1_ushort___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_ushort_V___Impl.Vtbl** unsafe___returnValue__retval = default(global::System.Nullable_A_ushort_V___Impl.Vtbl**);
			global::System.Nullable<ushort> __returnValue__retval = default(global::System.Nullable<ushort>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___returnValue__retval != null)
					__returnValue__retval = (ushort)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe___returnValue__retval), 
															typeof(global::Windows.Foundation.IReference<ushort>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<UInt16>"
									);
				else
					__returnValue__retval = null;
				// Return
				return __returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___returnValue__retval)));
			}
		}

		// Signature, Org.WebRtc.__IRTCDataChannelInitPublicNonVirtuals.set_MaxPacketLifeTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_ushort___Windows_Foundation__IReference_A_ushort_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_ushort___<TThis>(
					global::System.__ComObject __this, 
					global::System.Nullable<ushort> __set_formal, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_ushort_V___Impl.Vtbl** unsafe___set_formal = default(global::System.Nullable_A_ushort_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (__set_formal.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<ushort> unsafe___set_formal_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<ushort>(__set_formal.Value, 3);
					unsafe___set_formal = (global::System.Nullable_A_ushort_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe___set_formal_Wrapper, 
										typeof(global::Windows.Foundation.IReference<ushort>).TypeHandle
									);
				}
				else
					unsafe___set_formal = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe___set_formal
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___set_formal)));
			}
		}

		// Signature, Org.WebRtc.__IStringDataChannelMessageFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__IntPtr__<TThis>(
					global::System.__ComObject __this, 
					string data, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_data = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe___returnValue__retval;
			global::System.IntPtr __returnValue__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_data = data)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_data;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_data, data, &(hstring_header_data), &(unsafe_data));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_data, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__returnValue__retval = unsafe___returnValue__retval;
			}
			// Return
			return __returnValue__retval;
		}

		// Signature, Org.WebRtc.__IBinaryDataChannelMessageFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_TArg0__IntPtr__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 data, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.IntPtr unsafe___returnValue__retval;
			global::System.IntPtr __returnValue__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									data, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__returnValue__retval = unsafe___returnValue__retval;
				// Return
				return __returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(data);
			}
		}

		// Signature, Org.WebRtc.__IRTCDataChannelPublicNonVirtuals.add_OnOpen, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Org_WebRtc_EventDelegate__Org_WebRtc__EventDelegate *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_Org_WebRtc_EventDelegate___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Org.WebRtc.EventDelegate __param0, 
					int __targetIndex)
		{
			// Setup
			global::Org.WebRtc.EventDelegate__Impl.Vtbl** unsafe___param0 = default(global::Org.WebRtc.EventDelegate__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___returnValue__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __returnValue__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::Org.WebRtc.EventDelegate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::Org.WebRtc.EventDelegate).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget119>(global::Org.WebRtc.EventDelegate__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__returnValue__retval = unsafe___returnValue__retval;
				// Return
				return __returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<System.Collections.Generic.IList<Org.WebRtc.CaptureCapability>>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__int<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 asyncInfo, 
					int asyncStatus, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Org.WebRtc.__IMediaPublicNonVirtuals.CreateMediaSource, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_TArg0__string__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					TArg0 track, 
					string id, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.HSTRING unsafe_id = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									track, 
									typeof(TArg0).TypeHandle
								);
				fixed (char* pBuffer_id = id)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_id;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_id, id, &(hstring_header_id), &(unsafe_id));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_TArg0__arg, 
										unsafe_id, 
										&(unsafe_TResult__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(track);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Org.WebRtc.__IMediaPublicNonVirtuals.SelectAudioCaptureDevice, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_TArg0__bool__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 device, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			bool __returnValue__retval;
			sbyte unsafe___returnValue__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									device, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__returnValue__retval = unsafe___returnValue__retval != 0;
				// Return
				return __returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(device);
			}
		}

		// Signature, Org.WebRtc.__ICodecInfoPublicNonVirtuals.set_Id, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__<TThis>(
					global::System.__ComObject __this, 
					int value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Org.WebRtc.__IWebRTCStatics.SaveTrace, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__bool__<TThis>(
					global::System.__ComObject __this, 
					string filename, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_filename = default(global::System.Runtime.InteropServices.HSTRING);
			bool __returnValue__retval;
			sbyte unsafe___returnValue__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_filename = filename)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_filename;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_filename, filename, &(hstring_header_filename), &(unsafe_filename));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_filename, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__returnValue__retval = unsafe___returnValue__retval != 0;
			}
			// Return
			return __returnValue__retval;
		}

		// Signature, Org.WebRtc.__IWebRTCStatics.SaveTrace, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__int__bool__<TThis>(
					global::System.__ComObject __this, 
					string host, 
					int port, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_host = default(global::System.Runtime.InteropServices.HSTRING);
			bool __returnValue__retval;
			sbyte unsafe___returnValue__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_host = host)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_host;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_host, host, &(hstring_header_host), &(unsafe_host));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_host, 
									port, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__returnValue__retval = unsafe___returnValue__retval != 0;
			}
			// Return
			return __returnValue__retval;
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.get_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static ulong Func_ulong__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			ulong unsafe_value__retval;
			ulong value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.put_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ulong__<TThis>(
					global::System.__ComObject __this, 
					ulong value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.GetInputStreamAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_ulong__TResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					ulong position, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									position, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.put_Length, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__<TThis>(
					global::System.__ComObject __this, 
					uint value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,uint>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IBuffer__uint___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint> Func__AsyncOperationProgressHandler_2_Storage_Streams_IBuffer__uint___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget136>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__uint__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 asyncInfo, 
					uint progressInfo, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<uint,uint>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_uint__uint___Windows_Foundation__AsyncOperationProgressHandler_A_uint_j_uint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint> Func__AsyncOperationProgressHandler_2_uint__uint___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_uint_j_uint_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_uint_j_uint_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget147>(global::Windows.Foundation.AsyncOperationProgressHandler_A_uint_j_uint_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Org.WebRtc.__IRTCPeerConnectionPublicNonVirtuals.add_OnAddStream, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Org_WebRtc_MediaStreamEventEventDelegate__Org_WebRtc__MediaStreamEventEventDelegate *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_Org_WebRtc_MediaStreamEventEventDelegate___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Org.WebRtc.MediaStreamEventEventDelegate __param0, 
					int __targetIndex)
		{
			// Setup
			global::Org.WebRtc.MediaStreamEventEventDelegate__Impl.Vtbl** unsafe___param0 = default(global::Org.WebRtc.MediaStreamEventEventDelegate__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___returnValue__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __returnValue__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::Org.WebRtc.MediaStreamEventEventDelegate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::Org.WebRtc.MediaStreamEventEventDelegate).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget160>(global::Org.WebRtc.MediaStreamEventEventDelegate__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__returnValue__retval = unsafe___returnValue__retval;
				// Return
				return __returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, Org.WebRtc.__IRTCPeerConnectionPublicNonVirtuals.CreateDataChannel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_string__TArg0__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					string label, 
					TArg0 init, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_label = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_label = label)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_label;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_label, label, &(hstring_header_label), &(unsafe_label));
					unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										init, 
										typeof(TArg0).TypeHandle
									);
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_label, 
										unsafe_TArg0__arg, 
										&(unsafe_TResult__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(init);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Org.WebRtc.FramesPerSecondChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__string__<TThis>(
					global::System.__ComObject __this, 
					string id, 
					string fps, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_id = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_fps = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_id = id)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_id;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_id, id, &(hstring_header_id), &(unsafe_id));
				fixed (char* pBuffer_fps = fps)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fps;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fps, fps, &(hstring_header_fps), &(unsafe_fps));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_id, 
										unsafe_fps
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
			}
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func_uint___Point__<TThis>(
					global::System.__ComObject __this, 
					uint index, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe___value__retval;
			global::Windows.Foundation.Point __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__Point__out_uint__bool__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point value, 
					out uint index, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint___Point__<TThis>(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.Foundation.Point value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__Point__uint__<TThis>(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Foundation.Point[] items, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Point* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Point* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Point*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Color>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color Func_UI_Color__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color unsafe___value__retval;
			global::Windows.UI.Color __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.Imaging.IBitmapImage.get_UriSource, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Uri Func_Uri__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Uri value__retval = default(global::System.Uri);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = global::McgInterop.McgHelpers.WindowsFoundationUri2SystemUri(((global::System.IntPtr)unsafe_value__retval));
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__int<TThis>(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					int status, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,byte>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static byte Func_byte__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			byte unsafe___value__retval;
			byte __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Web.Http.Headers.IHttpContentHeaderCollection.TryAppendWithoutValidation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__string__bool__<TThis>(
					global::System.__ComObject __this, 
					string name, 
					string value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			bool succeeded__retval;
			sbyte unsafe_succeeded__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_name = name)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_name, 
										unsafe_value, 
										&(unsafe_succeeded__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					succeeded__retval = unsafe_succeeded__retval != 0;
				}
			}
			// Return
			return succeeded__retval;
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget217>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_StatusCode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpStatusCode__Windows_Web_Http__HttpStatusCode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpStatusCode Func_Web_Http_HttpStatusCode__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpStatusCode unsafe_value__retval;
			global::Windows.Web.Http.HttpStatusCode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget221>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeAttr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_IntPtr__<TThis>(
					global::System.__ComObject __this, 
					out global::System.IntPtr ppTypeAttr, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppTypeAttr;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_ppTypeAttr)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppTypeAttr = unsafe_ppTypeAttr;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeComp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeComp__Private_Interop__<TThis>(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTComp = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_ppTComp)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTComp), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetFuncDesc, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_IntPtr__<TThis>(
					global::System.__ComObject __this, 
					int index, 
					out global::System.IntPtr ppFuncDesc, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppFuncDesc;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								index, 
								&(unsafe_ppFuncDesc)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppFuncDesc = unsafe_ppFuncDesc;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDocumentation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__out_string__out_int__out_string__<TThis>(
					global::System.__ComObject __this, 
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			ushort* unsafe_strDocString = default(ushort*);
			int unsafe_dwHelpContext;
			ushort* unsafe_strHelpFile = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strName = null;
				unsafe_strDocString = null;
				unsafe_strHelpFile = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									index, 
									&(unsafe_strName), 
									&(unsafe_strDocString), 
									&(unsafe_dwHelpContext), 
									&(unsafe_strHelpFile)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				strHelpFile = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strHelpFile);
				dwHelpContext = unsafe_dwHelpContext;
				strDocString = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strDocString);
				strName = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strName);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strName);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strDocString);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strHelpFile);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeInfo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_ITypeInfo__Private_Interop__<TThis>(
					global::System.__ComObject __this, 
					int hRef, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTI, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTI = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTI = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									hRef, 
									&(unsafe_ppTI)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTI = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTI), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTI)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.ReleaseTypeAttr, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_void__IntPtr__<TThis>(
					global::System.__ComObject __this, 
					global::System.IntPtr pTypeAttr, 
					int __targetIndex)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.ComCallHelpers.ComCall__void__(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								pTypeAttr
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	internal unsafe static partial class ComCallHelpers
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					void* arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Input.ManipulationModes arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Thickness arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.CornerRadius arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					uint arg2, 
					void* arg3, 
					uint arg4, 
					uint arg5, 
					void* arg6, 
					uint arg7, 
					uint arg8, 
					void* arg9, 
					uint arg10)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8, 
								arg9, 
								arg10
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					uint arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					ushort arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ushort arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					long arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					uint arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Graphics.Display.DisplayOrientations arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Runtime.InteropServices.HSTRING arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ulong arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ulong arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					global::Windows.Storage.Streams.InputStreamOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					uint arg1, 
					uint arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ushort arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Windows.Foundation.Point arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.TimeSpan arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Guid arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					uint arg2, 
					uint arg3, 
					double arg4, 
					double arg5, 
					uint arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					global::Windows.System.Threading.WorkItemOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					global::System.Runtime.InteropServices.HSTRING arg4, 
					ulong arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					ulong arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Web.Http.HttpProgress__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					global::System.IntPtr arg3, 
					uint arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					global::System.IntPtr arg4, 
					uint arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					global::System.IntPtr arg4, 
					global::System.IntPtr arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr arg3, 
					global::System.IntPtr arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void ComCall__void__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			global::McgInterop.Intrinsics.StdCall__void__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}
	}

	internal unsafe static partial class ReverseComSharedStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_string__(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_string__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = global::System.Runtime.InteropServices.McgMarshal.StringToHString(value__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.FreeHString((*(unsafe_value__retval)).handle);
					(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_object__Type__object__string__object__(
					object __this, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value, 
					global::System.Type__Impl.UnsafeType unsafe_targetType, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter, 
					global::System.Runtime.InteropServices.HSTRING unsafe_language, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** unsafe_returnValue__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object value = default(object);
			global::System.Type targetType;
			object parameter = default(object);
			string language = default(string);
			if (unsafe_returnValue__retval != null)
				(*(unsafe_returnValue__retval)) = null;
			object returnValue__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				targetType = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
									unsafe_targetType.Name, 
									((int)unsafe_targetType.Kind)
								);
				parameter = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_parameter));
				language = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_language);
				// Call to managed method
				returnValue__retval = global::McgInterop.Intrinsics.HasThisCall__Func_object__Type__object__string__object__(
									__this, 
									__methodPtr, 
									value, 
									targetType, 
									parameter, 
									language
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_returnValue__retval != null)
					(*(unsafe_returnValue__retval)) = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(returnValue__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_returnValue__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_returnValue__retval)))));
					(*(unsafe_returnValue__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__<TArg0>(
					object __this, 
					void* unsafe_p, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_p), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.UnhandledExceptionEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_object__TArg0__<TArg0>(
					object __this, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					void* unsafe_e, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object sender = default(object);
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_object__TArg0__<TArg0>(
									__this, 
									__methodPtr, 
									sender, 
									TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__TArg1__<TArg0, TArg1>(
					object __this, 
					void* unsafe_sender, 
					void* unsafe_args, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			TArg1 TArg1__arg = default(TArg1);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_sender), 
									typeof(TArg0).TypeHandle
								);
				TArg1__arg = (TArg1)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_args), 
									typeof(TArg1).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__TArg1__<TArg0, TArg1>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									TArg1__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_string__TResult__<TResult>(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING unsafe_fullName, 
					void** unsafe_xamlType__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			string fullName = default(string);
			if (unsafe_xamlType__retval != null)
				(*(unsafe_xamlType__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				fullName = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_fullName);
				// Call to managed method
				TResult__retval = global::McgInterop.Intrinsics.HasThisCall__Func_string__TResult__<TResult>(
									__this, 
									__methodPtr, 
									fullName
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_xamlType__retval != null)
					(*(unsafe_xamlType__retval)) = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_xamlType__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_xamlType__retval)))));
					(*(unsafe_xamlType__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_TResult__<TResult>(
					object __this, 
					void** unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				// Call to managed method
				TResult__retval = global::McgInterop.Intrinsics.HasThisCall__Func_TResult__<TResult>(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_IsArray, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_bool__(
					object __this, 
					sbyte* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			bool value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_bool__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (value__retval ? ((sbyte)1) : ((sbyte)0));
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.CreateFromString, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_string__object__(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING unsafe_value, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** unsafe_instance__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			string value = default(string);
			if (unsafe_instance__retval != null)
				(*(unsafe_instance__retval)) = null;
			object instance__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value);
				// Call to managed method
				instance__retval = global::McgInterop.Intrinsics.HasThisCall__Func_string__object__(
									__this, 
									__methodPtr, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_instance__retval != null)
					(*(unsafe_instance__retval)) = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(instance__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_instance__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_instance__retval)))));
					(*(unsafe_instance__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToVector, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_object__object__(
					object __this, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object instance = default(object);
			object value = default(object);
			try
			{
				// Marshalling
				instance = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance));
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_object__object__(
									__this, 
									__methodPtr, 
									instance, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.RunInitializer, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_(
					object __this, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.get_Size, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_ulong__(
					object __this, 
					ulong* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			ulong value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_ulong__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.put_Size, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_ulong__(
					object __this, 
					ulong unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_ulong__(
									__this, 
									__methodPtr, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.GetInputStreamAt, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_ulong__TResult__<TResult>(
					object __this, 
					ulong unsafe_position, 
					void** unsafe_stream__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_stream__retval != null)
				(*(unsafe_stream__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				// Call to managed method
				TResult__retval = global::McgInterop.Intrinsics.HasThisCall__Func_ulong__TResult__<TResult>(
									__this, 
									__methodPtr, 
									unsafe_position
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_stream__retval != null)
					(*(unsafe_stream__retval)) = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_stream__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_stream__retval)))));
					(*(unsafe_stream__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.get_Capacity, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_uint__(
					object __this, 
					uint* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			uint value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_uint__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.put_Length, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_uint__(
					object __this, 
					uint unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_uint__(
									__this, 
									__methodPtr, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__uint__<TArg0>(
					object __this, 
					void* unsafe_asyncInfo, 
					uint unsafe_progressInfo, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__uint__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									unsafe_progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0___AsyncStatus__<TArg0>(
					object __this, 
					void* unsafe_asyncInfo, 
					global::Windows.Foundation.AsyncStatus unsafe_asyncStatus, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0___AsyncStatus__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									unsafe_asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}
	}
}

